#!/usr/bin/env ruby

#require File.expand_path(File.dirname(__FILE__) + '/../lib/starting_blocks.rb')
require 'starting_blocks'

arguments = [ARGV, (File.exists?(File.expand_path('~/.sb')) ? File.read(File.expand_path('~/.sb')).split(' ') : [])].flatten

[:blinky, :growl, :stopplicht].each { |p| require "starting_blocks-#{p}" if arguments.include? "--#{p}" }

StartingBlocks.verbose = arguments.include? '--verbose'

options = {
            no_vendor:   (arguments.include?('--vendor') == false),
            use_bundler: (Dir['Gemfile'].count > 0)
          }

def run_all_specs options
  files = ['**/*_spec.rb*', '**/*_test.rb*', '**/test_*.rb*'].map do |d|
    Dir[d].
      select { |f| File.file?(f) }.
      map    { |x| File.expand_path(x) }
  end.flatten

  StartingBlocks::Runner.new(options).run_files files
end

if arguments.include? '--watch'
  listener = StartingBlocks::Watcher.start_watching Dir, options
  StartingBlocks.display "Going to sleep, waiting for changes"

  puts 'Enter "stop" to stop the listener'

  listener.start
  loop do
    user_input = STDIN.gets
    if user_input == "stop\n"
      exit
    end
  end
elsif arguments.include? '--off'
  StartingBlocks::Extensions::BlinkyLighting.turn_off!
else
  results = run_all_specs options

  parsed_results = StartingBlocks::Publisher.result_parser.parse(results)
  success = parsed_results[:color] == :green

  exit success
end
